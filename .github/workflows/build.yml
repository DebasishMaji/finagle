# twitter/finagle sbt build/test with coverage
name: sbt-build

env:
  JAVA_OPTS: "-Dsbt.log.noformat=true"
  SKIP_FLAKY_TRAVIS: "true"
defaults:
  run:
    shell: bash
on:
  push:
    branches: [ ccoco/WorkflowBuild ]

jobs:
  test-with-coverage: # generate coverage report for 2.12.8 on jdk1.8
    continue-on-error: ${{ matrix.use_netty }}
    runs-on: ubuntu-latest
    env:
      USE_NETTY_SNAPSHOT: ${{ matrix.use_netty }}
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        java: [openjdk@1.8, openjdk@1.11]
        scala: [2.12.8]
        project: [finagle-base-http, finagle-benchmark, =finagle-benchmark-thrift, finagle-core, finagle-example, finagle-exception, finagle-exp, finagle-grpc-context, finagle-http, finagle-http2, finagle-init, finagle-integration, finagle-memcached, finagle-mux, finagle-mysql, finagle-netty4, finagle-netty4-http, finagle-opencensus-tracing, finagle-partitioning, finagle-redis, finagle-serversets, finagle-stats, finagle-stats-core, finagle-thrift, finagle-thriftmux, finagle-toggle, finagle-tunable, finagle-zipkin-core, finagle-zipkin-scribe]
        use_netty: [true, false]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: ${{ matrix.java }}
      - name: cache/maven
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: cache/ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-${{ matrix.java }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: cache/sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-${{ matrix.java }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: cache/dodo
        uses: actions/cache@v1
        with:
          path: ~/.dodo
          key: ${{ runner.os }}-dodo-${{ hashFiles('**/*.*') }}
      - name: unset/sbt-opts # default $SBT_OPTS is irrelevant to sbt launcher
        run: |
          unset SBT_OPTS
      - name: dodo
        run: |
          curl -s https://raw.githubusercontent.com/twitter/dodo/develop/bin/build | bash -s -- --no-test --scala-version ${{ matrix.scala }} finagle
      - name: compile/finagle-memached # don't test these projects because they require a running memcached instance
        run: |
          ./sbt ++${{ matrix.scala }} finagle-memcached/test:compile
      - name: netty/setup
        if: ${{ matrix.use_netty }}
        run: |
          source ./netty-snapshot-env.sh true
      - name: test
        if: ${{ matrix.java != 'openjdk@1.8' }}
        run: |
          ./sbt ++${{ matrix.scala }} clean test
      - name: test/with-coverage
        if: ${{ matrix.java == 'openjdk@1.8' }}
        run: |
          ./sbt ++${{ matrix.scala }} clean coverage "${{ matrix.project }}/test" coverageReport
      - name: test/coverage-report/generate
        if: ${{ matrix.java == 'openjdk@1.8' }}
        run: |
          ./sbt ++${{ matrix.scala }} coverageAggregate
      - name: test/coverage-report/upload
        if: ${{ success() && matrix.java == 'openjdk@1.8' }}
        uses: codecov/codecov-action@v1
  test:
    continue-on-error: ${{ matrix.use_netty || matrix.experimental }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        java: [openjdk@1.8, openjdk@1.11]
        scala: [2.11.12, 2.13.1]
        use_netty: [true, false]
        project: [finagle-base-http, finagle-benchmark, =finagle-benchmark-thrift, finagle-core, finagle-example, finagle-exception, finagle-exp, finagle-grpc-context, finagle-http, finagle-http2, finagle-init, finagle-integration, finagle-memcached, finagle-mux, finagle-mysql, finagle-netty4, finagle-netty4-http, finagle-opencensus-tracing, finagle-partitioning, finagle-redis, finagle-serversets, finagle-stats, finagle-stats-core, finagle-thrift, finagle-thriftmux, finagle-toggle, finagle-tunable, finagle-zipkin-core, finagle-zipkin-scribe]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: ${{ matrix.java }}
      - name: cache/maven
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: cache/ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-${{ matrix.java }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: cache/sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-${{ matrix.java }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: cache/dodo
        uses: actions/cache@v1
        with:
          path: ~/.dodo
          key: ${{ runner.os }}-dodo-${{ hashFiles('**/*.*') }}
      - name: unset/sbt-opts # default $SBT_OPTS is irrelevant to sbt launcher
        run: |
          unset SBT_OPTS
      - name: dodo
        run: |
          curl -s https://raw.githubusercontent.com/twitter/dodo/develop/bin/build | bash -s -- --no-test --scala-version ${{ matrix.scala }} finagle
      - name: compile/finagle-memached # don't test these projects because they require a running memcached instance
        run: |
          ./sbt ++${{ matrix.scala }} finagle-memcached/test:compile
      - name: netty/setup
        if: ${{ matrix.use_netty }}
        run: |
          source ./netty-snapshot-env.sh true
      - name: test
        run: |
          ./sbt ++${{ matrix.scala }} clean "${{ matrix.project }}/test"
